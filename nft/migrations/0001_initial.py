# Generated by Django 3.2.2 on 2021-11-20 19:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0002_auto_20211120_1955'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mint_number', models.IntegerField()),
                ('ipfs_hash', models.CharField(blank=True, max_length=1024, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute_type', models.CharField(choices=[('number', 'Number'), ('string', 'String'), ('boolean', 'Boolean')], default='string', max_length=32)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('value', models.CharField(blank=True, max_length=1024, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.CharField(blank=True, max_length=4096, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='CollectionAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('count', models.FloatField()),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collectionattribute_collection', to='nft.collection')),
            ],
        ),
        migrations.CreateModel(
            name='NiftyFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('uri', models.CharField(blank=True, max_length=2048, null=True)),
                ('ipfs_hash', models.CharField(blank=True, max_length=1024, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField()),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nifty_file_uploader', to='user.niftyuser')),
            ],
        ),
        migrations.CreateModel(
            name='Schema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.CharField(blank=True, max_length=4096, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField()),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schema_collection', to='nft.collection')),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.CharField(blank=True, max_length=4096, null=True)),
                ('max_supply', models.IntegerField(blank=True, null=True)),
                ('burnable', models.BooleanField(default=False)),
                ('transferrable', models.BooleanField(default=False)),
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField()),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='template_creator', to='user.niftyuser')),
                ('image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='template_image', to='nft.niftyfile')),
                ('schema', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='template_schema', to='nft.schema')),
                ('thumbnail', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='template_thumbnail', to='nft.niftyfile')),
            ],
        ),
        migrations.CreateModel(
            name='Unlockable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('uri', models.CharField(blank=True, max_length=2048, null=True)),
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField()),
                ('uploader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unlockable_uploader', to='user.niftyuser')),
            ],
        ),
        migrations.CreateModel(
            name='TemplateUnlockable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templateunlockable_template', to='nft.template')),
                ('unlockable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templateunlockable_unlockable', to='nft.unlockable')),
            ],
        ),
        migrations.CreateModel(
            name='TemplateRoyalty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bp', models.FloatField()),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templateroyalty_template', to='nft.template')),
            ],
        ),
        migrations.CreateModel(
            name='TemplateAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templateattribute_attribute', to='nft.attribute')),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='templateattribute_template', to='nft.template')),
            ],
        ),
        migrations.CreateModel(
            name='SchemaAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schemaattribute_attribue', to='nft.attribute')),
                ('schema', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schemaattribute_schema', to='nft.schema')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_type', models.CharField(choices=[('bid', 'Bid'), ('ask', 'Ask')], default=None, max_length=32)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('fulfilled', 'Fulfilled'), ('rejected', 'Rejected'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default=None, max_length=32)),
                ('price', models.FloatField()),
                ('expiry', models.DateTimeField()),
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField()),
                ('asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_asset', to='nft.asset')),
                ('maker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_maker', to='user.niftyuser')),
                ('taker', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_taker', to='user.niftyuser')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalOrder',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('order_type', models.CharField(choices=[('bid', 'Bid'), ('ask', 'Ask')], default=None, max_length=32)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('fulfilled', 'Fulfilled'), ('rejected', 'Rejected'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default=None, max_length=32)),
                ('price', models.FloatField()),
                ('expiry', models.DateTimeField()),
                ('created', models.DateTimeField(editable=False)),
                ('modified', models.DateTimeField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('asset', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='nft.asset')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('maker', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='user.niftyuser')),
                ('taker', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='user.niftyuser')),
            ],
            options={
                'verbose_name': 'historical order',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAssetTransfer',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('assigned', 'Assigned'), ('submitted', 'Submitted'), ('confirmed', 'Confirmed')], default=None, max_length=32)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('asset', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='nft.asset')),
                ('from_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='user.niftyuser')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='user.niftyuser')),
            ],
            options={
                'verbose_name': 'historical asset transfer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='CollectionStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=512, null=True)),
                ('count', models.FloatField()),
                ('attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collectionstats_attribute', to='nft.collectionattribute')),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collectionstats_collection', to='nft.collection')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionRoyalty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bp', models.FloatField()),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collectionroyaltty_collection', to='nft.collection')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collectionauth_collection', to='nft.collection')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='collectionauth_user', to='user.niftyuser')),
            ],
        ),
        migrations.AddField(
            model_name='collection',
            name='banner_image',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='nft.niftyfile'),
        ),
        migrations.AddField(
            model_name='collection',
            name='creator',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.niftyuser'),
        ),
        migrations.CreateModel(
            name='AssetUnlockable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assetunlockable_asset', to='nft.asset')),
                ('unlockable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assetunlockable_unlockable', to='nft.unlockable')),
            ],
        ),
        migrations.CreateModel(
            name='AssetTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('assigned', 'Assigned'), ('submitted', 'Submitted'), ('confirmed', 'Confirmed')], default=None, max_length=32)),
                ('asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assettransfer_asset', to='nft.asset')),
                ('from_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assettransfer_from_user', to='user.niftyuser')),
                ('to_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assettransfer_to_user', to='user.niftyuser')),
            ],
        ),
        migrations.CreateModel(
            name='AssetAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assetattribute_asset', to='nft.asset')),
                ('attribute', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assetattribute_attribute', to='nft.attribute')),
            ],
        ),
        migrations.AddField(
            model_name='asset',
            name='image',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asset_image', to='nft.niftyfile'),
        ),
        migrations.AddField(
            model_name='asset',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asset_owner', to='user.niftyuser'),
        ),
        migrations.AddField(
            model_name='asset',
            name='template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asset_template', to='nft.template'),
        ),
        migrations.AddField(
            model_name='asset',
            name='thumbnail',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aset_thumbnail', to='nft.niftyfile'),
        ),
    ]
